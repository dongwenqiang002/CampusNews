<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.agile.campusnews.app.mapper.StuClassMapper">
  <resultMap id="BaseResultMap" type="team.agile.campusnews.app.model.StuClass">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="major_id" jdbcType="INTEGER" property="majorId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="instructor" jdbcType="INTEGER" property="instructor" />
  </resultMap>
  <sql id="Base_Column_List">
    id, college_id, major_id, name, code, instructor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.agile.campusnews.app.model.StuClass">
    insert into class (id, college_id, major_id, 
      name, code, instructor
      )
    values (#{id,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{instructor,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="team.agile.campusnews.app.model.StuClass">
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="instructor != null">
        instructor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="instructor != null">
        #{instructor,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="team.agile.campusnews.app.model.StuClass">
    update class
    <set>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="instructor != null">
        instructor = #{instructor,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.agile.campusnews.app.model.StuClass">
    update class
    set college_id = #{collegeId,jdbcType=INTEGER},
      major_id = #{majorId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      instructor = #{instructor,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>